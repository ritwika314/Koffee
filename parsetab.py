
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'DD150C4951042CDE433F9BF00F39AE1A'
    
_lr_action_items = {'LID':([3,5,6,7,8,10,12,13,14,15,18,19,21,22,26,27,29,31,35,37,40,51,58,59,60,61,62,66,78,82,83,84,87,89,91,94,96,97,100,104,105,119,126,127,128,129,130,133,134,144,148,149,150,152,153,154,155,156,157,161,166,167,173,],[-74,-74,-4,-74,-5,-2,-74,-74,-10,-3,-44,-74,-74,-9,-74,-46,39,-50,-42,-48,39,67,-20,-21,-22,-23,76,76,-43,76,-53,-54,101,-11,-45,76,-49,76,-6,-47,76,76,76,76,76,76,76,-55,76,76,76,-70,-72,-71,-73,-69,-68,76,76,-56,-59,76,76,]),'DEDENT':([44,47,53,54,55,57,63,64,70,72,73,74,75,80,82,83,84,86,92,93,98,102,122,123,125,133,135,136,146,147,159,161,172,174,175,],[-74,-74,-74,-13,-74,-74,78,-17,89,-15,91,-74,-16,96,-52,-53,-54,100,104,-19,-51,-74,135,-74,-18,-55,-12,147,161,-14,166,-56,-61,175,-60,]),'CID':([2,11,16,],[4,17,23,]),'ALLREAD':([3,5,6,7,8,10,12,13,14,15,18,19,22,78,89,100,],[-74,-74,-4,-74,-5,-2,-74,-74,-10,-3,-44,25,-9,-43,-11,-6,]),'RPAR':([76,106,107,108,109,110,111,112,113,114,115,116,118,124,132,137,138,139,140,141,142,143,151,158,162,163,164,165,168,169,170,],[-26,-27,-39,-35,-33,-34,-40,-24,-25,-36,-41,-32,-38,137,-67,-37,-31,-28,-29,-30,151,137,-66,165,168,169,170,-65,-62,-63,-64,]),'ATOMIC':([66,82,83,84,133,134,161,167,173,],[85,85,-53,-54,-55,85,-56,85,85,]),'TRUE':([94,97,105,119,126,127,128,129,130,144,148,149,150,152,153,154,155,156,157,],[111,111,111,111,111,111,111,111,111,111,111,-70,-72,-71,-73,-69,-68,111,111,]),'MINUS':([76,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,132,137,138,139,140,141,143,],[-26,-27,-39,-35,-33,-34,-40,-24,-25,-36,-41,-32,129,-38,129,129,129,-37,-31,-28,-29,-30,129,]),'DEF':([3,7,8,10,100,],[9,9,-5,-2,-6,]),'NEQ':([76,106,107,108,109,110,111,112,113,114,115,116,118,137,138,139,140,141,142,143,151,165,168,169,170,],[-26,-27,-39,-35,-33,-34,-40,-24,-25,-36,-41,-32,-38,-37,-31,-28,-29,-30,154,-67,-66,-65,-62,-63,-64,]),'PRE':([79,],[95,]),'GEQ':([76,106,107,108,109,110,111,112,113,114,115,116,118,137,138,139,140,141,142,143,151,165,168,169,170,],[-26,-27,-39,-35,-33,-34,-40,-24,-25,-36,-41,-32,-38,-37,-31,-28,-29,-30,149,-67,-66,-65,-62,-63,-64,]),'NL':([4,24,28,32,34,42,46,48,67,68,69,76,77,90,99,101,106,107,108,109,110,111,112,113,114,115,116,117,118,120,131,132,137,138,139,140,141,151,165,167,168,169,170,],[10,33,38,43,45,50,56,65,-8,86,88,-26,93,103,121,-7,-27,-39,-35,-33,-34,-40,-24,-25,-36,-41,-32,125,-38,133,145,-67,-37,-31,-28,-29,-30,-66,-65,171,-62,-63,-64,]),'EQ':([76,106,107,108,109,110,111,112,113,114,115,116,118,137,138,139,140,141,142,143,151,165,168,169,170,],[-26,-27,-39,-35,-33,-34,-40,-24,-25,-36,-41,-32,-38,-37,-31,-28,-29,-30,155,-67,-66,-65,-62,-63,-64,]),'PID':([94,97,105,119,126,127,128,129,130,144,148,149,150,152,153,154,155,156,157,],[112,112,112,112,112,112,112,112,112,112,112,-70,-72,-71,-73,-69,-68,112,112,]),'POS':([47,55,57,74,93,102,123,125,],[60,60,60,60,-19,60,60,-18,]),'AGENT':([0,],[2,]),'ASGN':([76,77,81,],[-26,94,97,]),'INIT':([3,5,6,7,8,10,12,13,14,15,18,19,21,22,26,27,35,37,78,89,91,100,104,],[-74,-74,-4,-74,-5,-2,-74,-74,-10,-3,-44,-74,30,-9,-74,-46,-42,-48,-43,-11,-45,-6,-47,]),'FNUM':([94,97,105,119,126,127,128,129,130,144,148,149,150,152,153,154,155,156,157,],[107,107,107,107,107,107,107,107,107,107,107,-70,-72,-71,-73,-69,-68,107,107,]),'COLON':([17,20,23,25,30,36,39,52,71,85,95,160,],[24,28,32,34,42,46,48,69,90,99,119,167,]),'COMMA':([67,68,101,],[-8,87,-7,]),'BY':([76,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,132,137,138,139,140,141,143,],[-26,-27,-39,-35,-33,-34,-40,-24,-25,-36,-41,-32,126,-38,126,126,126,-37,-31,126,-29,126,126,]),'LPAR':([94,97,105,119,126,127,128,129,130,144,148,149,150,152,153,154,155,156,157,],[105,105,105,130,105,105,105,105,130,130,130,-70,-72,-71,-73,-69,-68,130,130,]),'$end':([1,40,41,49,166,],[0,-58,-1,-57,-59,]),'PLUS':([76,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,132,137,138,139,140,141,143,],[-26,-27,-39,-35,-33,-34,-40,-24,-25,-36,-41,-32,127,-38,127,127,127,-37,-31,-28,-29,-30,127,]),'GT':([76,106,107,108,109,110,111,112,113,114,115,116,118,137,138,139,140,141,142,143,151,165,168,169,170,],[-26,-27,-39,-35,-33,-34,-40,-24,-25,-36,-41,-32,-38,-37,-31,-28,-29,-30,150,-67,-66,-65,-62,-63,-64,]),'ACTUATORS':([44,],[52,]),'ENUM':([9,],[16,]),'MODULE':([3,5,6,7,8,10,13,15,89,100,],[-74,11,-4,-74,-5,-2,11,-3,-11,-6,]),'TIMES':([76,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,132,137,138,139,140,141,143,],[-26,-27,-39,-35,-33,-34,-40,-24,-25,-36,-41,-32,128,-38,128,128,128,-37,-31,128,-29,128,128,]),'INUM':([94,97,105,119,126,127,128,129,130,144,148,149,150,152,153,154,155,156,157,],[118,118,118,118,118,118,118,118,118,118,118,-70,-72,-71,-73,-69,-68,118,118,]),'FALSE':([94,97,105,119,126,127,128,129,130,144,148,149,150,152,153,154,155,156,157,],[115,115,115,115,115,115,115,115,115,115,115,-70,-72,-71,-73,-69,-68,115,115,]),'LOCAL':([3,5,6,7,8,10,12,13,14,15,18,19,22,26,27,78,89,91,100,],[-74,-74,-4,-74,-5,-2,-74,-74,-10,-3,-44,-74,-9,36,-46,-43,-11,-45,-6,]),'SENSORS':([44,53,54,135,],[-74,71,-13,-12,]),'EFF':([145,],[160,]),'AND':([76,106,107,108,109,110,111,112,113,114,115,116,118,137,138,139,140,141,142,143,151,165,168,169,170,],[-26,-27,-39,-35,-33,-34,-40,-24,-25,-36,-41,-32,-38,-37,-31,-28,-29,-30,148,-67,-66,-65,-62,-63,-64,]),'INDENT':([33,38,43,45,50,56,65,88,103,121,171,],[44,47,51,55,66,74,79,102,123,134,173,]),'INT':([47,55,57,74,93,102,123,125,],[58,58,58,58,-19,58,58,-18,]),'FLOAT':([47,55,57,74,93,102,123,125,],[59,59,59,59,-19,59,59,-18,]),'LT':([76,106,107,108,109,110,111,112,113,114,115,116,118,137,138,139,140,141,142,143,151,165,168,169,170,],[-26,-27,-39,-35,-33,-34,-40,-24,-25,-36,-41,-32,-38,-37,-31,-28,-29,-30,153,-67,-66,-65,-62,-63,-64,]),'LEQ':([76,106,107,108,109,110,111,112,113,114,115,116,118,137,138,139,140,141,142,143,151,165,168,169,170,],[-26,-27,-39,-35,-33,-34,-40,-24,-25,-36,-41,-32,-38,-37,-31,-28,-29,-30,152,-67,-66,-65,-62,-63,-64,]),'BOOLEAN':([47,55,57,74,93,102,123,125,],[61,61,61,61,-19,61,61,-18,]),'NUMBOTS':([94,97,105,119,126,127,128,129,130,144,148,149,150,152,153,154,155,156,157,],[113,113,113,113,113,113,113,113,113,113,113,-70,-72,-71,-73,-69,-68,113,113,]),'NOT':([130,],[144,]),'ALLWRITE':([3,5,6,7,8,10,12,13,14,15,22,89,100,],[-74,-74,-4,-74,-5,-2,20,-74,-10,-3,-9,-11,-6,]),'OR':([76,106,107,108,109,110,111,112,113,114,115,116,118,137,138,139,140,141,142,143,151,165,168,169,170,],[-26,-27,-39,-35,-33,-34,-40,-24,-25,-36,-41,-32,-38,-37,-31,-28,-29,-30,156,-67,-66,-65,-62,-63,-64,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([47,55,57,74,102,123,],[57,57,57,57,57,57,]),'effblock':([145,],[159,]),'bracketexp':([94,97,105,119,126,127,128,129,130,144,148,156,157,],[106,106,106,106,106,106,106,106,106,106,106,106,106,]),'pgm':([0,],[1,]),'sdecls':([53,],[70,]),'module':([5,13,],[13,13,]),'num':([94,97,105,119,126,127,128,129,130,144,148,156,157,],[109,109,109,109,109,109,109,109,109,109,109,109,109,]),'cond':([119,130,144,148,156,157,],[131,142,158,162,163,164,]),'names':([51,],[68,]),'ardecls':([19,],[26,]),'event':([29,40,],[40,40,]),'bval':([94,97,105,119,126,127,128,129,130,144,148,156,157,],[110,110,110,110,110,110,110,110,110,110,110,110,110,]),'enumdef':([3,7,],[8,8,]),'stmts':([66,82,134,173,],[80,98,146,174,]),'locdecls':([26,],[35,]),'asgn':([66,82,134,167,173,],[83,83,83,83,83,]),'awdecls':([12,],[19,]),'numbots':([94,97,105,119,126,127,128,129,130,144,148,156,157,],[114,114,114,114,114,114,114,114,114,114,114,114,114,]),'type':([47,55,57,74,102,123,],[62,62,62,62,62,62,]),'events':([29,40,],[41,49,]),'declblock':([12,],[21,]),'defs':([3,7,],[5,15,]),'initblock':([21,],[29,]),'pid':([94,97,105,119,126,127,128,129,130,144,148,156,157,],[108,108,108,108,108,108,108,108,108,108,108,108,108,]),'stmt':([66,82,134,167,173,],[82,82,82,172,82,]),'agnt':([0,],[3,]),'varname':([62,66,82,94,97,105,119,126,127,128,129,130,134,144,148,156,157,167,173,],[77,81,81,116,116,116,116,116,116,116,116,116,81,116,116,116,116,81,81,]),'adecls':([44,],[53,]),'modules':([5,13,],[12,22,]),'empty':([3,5,7,12,13,19,21,26,44,47,53,55,57,74,102,123,],[6,14,6,18,14,27,31,37,54,64,72,64,64,64,64,64,]),'exp':([94,97,105,119,126,127,128,129,130,144,148,156,157,],[117,120,124,132,138,139,140,141,143,132,132,132,132,]),'decls':([47,55,57,74,102,123,],[63,73,75,92,122,136,]),'op':([142,],[157,]),'def':([3,7,],[7,7,]),'atomic':([66,82,134,167,173,],[84,84,84,84,84,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> pgm","S'",1,None,None,None),
  ('pgm -> agnt defs modules declblock initblock events','pgm',6,'p_pgm','kparser.py',77),
  ('agnt -> AGENT CID NL','agnt',3,'p_agnt','kparser.py',82),
  ('defs -> def defs','defs',2,'p_defs','kparser.py',87),
  ('defs -> empty','defs',1,'p_defs','kparser.py',88),
  ('def -> enumdef','def',1,'p_def','kparser.py',94),
  ('enumdef -> DEF ENUM CID COLON NL INDENT names NL DEDENT','enumdef',9,'p_enumdef','kparser.py',100),
  ('names -> names COMMA LID','names',3,'p_names','kparser.py',107),
  ('names -> LID','names',1,'p_names','kparser.py',108),
  ('modules -> module modules','modules',2,'p_modules','kparser.py',114),
  ('modules -> empty','modules',1,'p_modules','kparser.py',115),
  ('module -> MODULE CID COLON NL INDENT adecls sdecls DEDENT','module',8,'p_module','kparser.py',127),
  ('adecls -> ACTUATORS COLON NL INDENT decls DEDENT','adecls',6,'p_adecls','kparser.py',133),
  ('adecls -> empty','adecls',1,'p_adecls','kparser.py',134),
  ('sdecls -> SENSORS COLON NL INDENT decls DEDENT','sdecls',6,'p_sdecls','kparser.py',143),
  ('sdecls -> empty','sdecls',1,'p_sdecls','kparser.py',144),
  ('decls -> decl decls','decls',2,'p_decls','kparser.py',153),
  ('decls -> empty','decls',1,'p_decls','kparser.py',154),
  ('decl -> type varname ASGN exp NL','decl',5,'p_decl','kparser.py',165),
  ('decl -> type varname NL','decl',3,'p_decl','kparser.py',166),
  ('type -> INT','type',1,'p_type','kparser.py',175),
  ('type -> FLOAT','type',1,'p_type','kparser.py',176),
  ('type -> POS','type',1,'p_type','kparser.py',177),
  ('type -> BOOLEAN','type',1,'p_type','kparser.py',178),
  ('pid -> PID','pid',1,'p_pid','kparser.py',184),
  ('numbots -> NUMBOTS','numbots',1,'p_numbots','kparser.py',190),
  ('varname -> LID','varname',1,'p_varname','kparser.py',196),
  ('exp -> bracketexp','exp',1,'p_exp','kparser.py',208),
  ('exp -> exp PLUS exp','exp',3,'p_exp','kparser.py',209),
  ('exp -> exp TIMES exp','exp',3,'p_exp','kparser.py',210),
  ('exp -> exp MINUS exp','exp',3,'p_exp','kparser.py',211),
  ('exp -> exp BY exp','exp',3,'p_exp','kparser.py',212),
  ('exp -> varname','exp',1,'p_exp','kparser.py',213),
  ('exp -> num','exp',1,'p_exp','kparser.py',214),
  ('exp -> bval','exp',1,'p_exp','kparser.py',215),
  ('exp -> pid','exp',1,'p_exp','kparser.py',216),
  ('exp -> numbots','exp',1,'p_exp','kparser.py',217),
  ('bracketexp -> LPAR exp RPAR','bracketexp',3,'p_bracketexp','kparser.py',226),
  ('num -> INUM','num',1,'p_num','kparser.py',232),
  ('num -> FNUM','num',1,'p_num','kparser.py',233),
  ('bval -> TRUE','bval',1,'p_bval','kparser.py',240),
  ('bval -> FALSE','bval',1,'p_bval','kparser.py',241),
  ('declblock -> awdecls ardecls locdecls','declblock',3,'p_declblock','kparser.py',248),
  ('awdecls -> ALLWRITE COLON NL INDENT decls DEDENT','awdecls',6,'p_awdecls','kparser.py',255),
  ('awdecls -> empty','awdecls',1,'p_awdecls','kparser.py',256),
  ('ardecls -> ALLREAD COLON NL INDENT decls DEDENT','ardecls',6,'p_ardecls','kparser.py',266),
  ('ardecls -> empty','ardecls',1,'p_ardecls','kparser.py',267),
  ('locdecls -> LOCAL COLON NL INDENT decls DEDENT','locdecls',6,'p_locdecls','kparser.py',277),
  ('locdecls -> empty','locdecls',1,'p_locdecls','kparser.py',278),
  ('initblock -> INIT COLON NL INDENT stmts DEDENT','initblock',6,'p_initblock','kparser.py',284),
  ('initblock -> empty','initblock',1,'p_initblock','kparser.py',285),
  ('stmts -> stmt stmts','stmts',2,'p_stmts','kparser.py',295),
  ('stmts -> stmt','stmts',1,'p_stmts','kparser.py',296),
  ('stmt -> asgn','stmt',1,'p_stmt','kparser.py',306),
  ('stmt -> atomic','stmt',1,'p_stmt','kparser.py',307),
  ('asgn -> varname ASGN exp NL','asgn',4,'p_asgn','kparser.py',313),
  ('atomic -> ATOMIC COLON NL INDENT stmts DEDENT','atomic',6,'p_atomic','kparser.py',319),
  ('events -> event events','events',2,'p_events','kparser.py',327),
  ('events -> event','events',1,'p_events','kparser.py',328),
  ('event -> LID COLON NL INDENT PRE COLON cond NL effblock DEDENT','event',10,'p_event','kparser.py',336),
  ('effblock -> EFF COLON NL INDENT stmts DEDENT','effblock',6,'p_effblock','kparser.py',342),
  ('effblock -> EFF COLON stmt','effblock',3,'p_effblock','kparser.py',343),
  ('cond -> LPAR cond AND cond RPAR','cond',5,'p_cond','kparser.py',352),
  ('cond -> LPAR cond OR cond RPAR','cond',5,'p_cond','kparser.py',353),
  ('cond -> LPAR cond op cond RPAR','cond',5,'p_cond','kparser.py',354),
  ('cond -> LPAR NOT cond RPAR','cond',4,'p_cond','kparser.py',355),
  ('cond -> LPAR cond RPAR','cond',3,'p_cond','kparser.py',356),
  ('cond -> exp','cond',1,'p_cond','kparser.py',357),
  ('op -> EQ','op',1,'p_op','kparser.py',370),
  ('op -> NEQ','op',1,'p_op','kparser.py',371),
  ('op -> GEQ','op',1,'p_op','kparser.py',372),
  ('op -> LEQ','op',1,'p_op','kparser.py',373),
  ('op -> GT','op',1,'p_op','kparser.py',374),
  ('op -> LT','op',1,'p_op','kparser.py',375),
  ('empty -> <empty>','empty',0,'p_empty','kparser.py',381),
]
