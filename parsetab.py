
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '2110962DEC22EA31D71F309B1EADDAF5'
    
_lr_action_items = {'LID':([3,5,6,7,8,10,12,13,14,15,18,19,21,22,26,27,29,31,35,37,40,51,58,59,60,61,62,66,78,82,83,84,87,89,91,94,96,97,100,104,105,119,126,127,128,129,130,133,134,144,148,149,150,151,152,153,154,155,156,160,165,166,172,],[-73,-73,-4,-73,-5,-2,-73,-73,-10,-3,-44,-73,-73,-9,-73,-46,39,-50,-42,-48,39,67,-20,-21,-22,-23,76,76,-43,76,-53,-54,101,-11,-45,76,-49,76,-6,-47,76,76,76,76,76,76,76,-55,76,76,76,-69,-71,-70,-72,-68,-67,76,76,-56,-59,76,76,]),'DEDENT':([44,47,53,54,55,57,63,64,70,72,73,74,75,80,82,83,84,86,92,93,98,102,122,123,125,133,135,136,146,147,158,160,171,173,174,],[-73,-73,-73,-13,-73,-73,78,-17,89,-15,91,-73,-16,96,-52,-53,-54,100,104,-19,-51,-73,135,-73,-18,-55,-12,147,160,-14,165,-56,-61,174,-60,]),'CID':([2,11,16,],[4,17,23,]),'ALLREAD':([3,5,6,7,8,10,12,13,14,15,18,19,22,78,89,100,],[-73,-73,-4,-73,-5,-2,-73,-73,-10,-3,-44,25,-9,-43,-11,-6,]),'RPAR':([76,106,107,108,109,110,111,112,113,114,115,116,118,124,132,137,138,139,140,141,143,157,161,162,163,164,167,168,169,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,137,-66,-37,-31,-28,-29,-30,137,164,167,168,169,-65,-62,-63,-64,]),'ATOMIC':([66,82,83,84,133,134,160,166,172,],[85,85,-53,-54,-55,85,-56,85,85,]),'TRUE':([94,97,105,119,126,127,128,129,130,144,148,149,150,151,152,153,154,155,156,],[111,111,111,111,111,111,111,111,111,111,111,-69,-71,-70,-72,-68,-67,111,111,]),'MINUS':([76,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,132,137,138,139,140,141,143,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,129,-38,129,129,129,-37,-31,-28,-29,-30,129,]),'DEF':([3,7,8,10,100,],[9,9,-5,-2,-6,]),'NEQ':([76,106,107,108,109,110,111,112,113,114,115,116,118,137,138,139,140,141,142,143,164,167,168,169,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,-37,-31,-28,-29,-30,153,-66,-65,-62,-63,-64,]),'PRE':([79,],[95,]),'GEQ':([76,106,107,108,109,110,111,112,113,114,115,116,118,137,138,139,140,141,142,143,164,167,168,169,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,-37,-31,-28,-29,-30,149,-66,-65,-62,-63,-64,]),'NL':([4,24,28,32,34,42,46,48,67,68,69,76,77,90,99,101,106,107,108,109,110,111,112,113,114,115,116,117,118,120,131,132,137,138,139,140,141,164,166,167,168,169,],[10,33,38,43,45,50,56,65,-8,86,88,-25,93,103,121,-7,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,125,-38,133,145,-66,-37,-31,-28,-29,-30,-65,170,-62,-63,-64,]),'EQ':([76,106,107,108,109,110,111,112,113,114,115,116,118,137,138,139,140,141,142,143,164,167,168,169,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,-37,-31,-28,-29,-30,154,-66,-65,-62,-63,-64,]),'PID':([94,97,105,119,126,127,128,129,130,144,148,149,150,151,152,153,154,155,156,],[112,112,112,112,112,112,112,112,112,112,112,-69,-71,-70,-72,-68,-67,112,112,]),'POS':([47,55,57,74,93,102,123,125,],[60,60,60,60,-19,60,60,-18,]),'AGENT':([0,],[2,]),'ASGN':([76,77,81,],[-25,94,97,]),'INIT':([3,5,6,7,8,10,12,13,14,15,18,19,21,22,26,27,35,37,78,89,91,100,104,],[-73,-73,-4,-73,-5,-2,-73,-73,-10,-3,-44,-73,30,-9,-73,-46,-42,-48,-43,-11,-45,-6,-47,]),'FNUM':([94,97,105,119,126,127,128,129,130,144,148,149,150,151,152,153,154,155,156,],[107,107,107,107,107,107,107,107,107,107,107,-69,-71,-70,-72,-68,-67,107,107,]),'COLON':([17,20,23,25,30,36,39,52,71,85,95,159,],[24,28,32,34,42,46,48,69,90,99,119,166,]),'COMMA':([67,68,101,],[-8,87,-7,]),'BY':([76,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,132,137,138,139,140,141,143,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,126,-38,126,126,126,-37,-31,126,-29,126,126,]),'LPAR':([94,97,105,119,126,127,128,129,130,144,148,149,150,151,152,153,154,155,156,],[105,105,105,130,105,105,105,105,130,130,130,-69,-71,-70,-72,-68,-67,130,130,]),'$end':([1,40,41,49,165,],[0,-58,-1,-57,-59,]),'PLUS':([76,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,132,137,138,139,140,141,143,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,127,-38,127,127,127,-37,-31,-28,-29,-30,127,]),'GT':([76,106,107,108,109,110,111,112,113,114,115,116,118,137,138,139,140,141,142,143,164,167,168,169,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,-37,-31,-28,-29,-30,150,-66,-65,-62,-63,-64,]),'ACTUATORS':([44,],[52,]),'ENUM':([9,],[16,]),'MODULE':([3,5,6,7,8,10,13,15,89,100,],[-73,11,-4,-73,-5,-2,11,-3,-11,-6,]),'TIMES':([76,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,132,137,138,139,140,141,143,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,128,-38,128,128,128,-37,-31,128,-29,128,128,]),'INUM':([94,97,105,119,126,127,128,129,130,144,148,149,150,151,152,153,154,155,156,],[118,118,118,118,118,118,118,118,118,118,118,-69,-71,-70,-72,-68,-67,118,118,]),'FALSE':([94,97,105,119,126,127,128,129,130,144,148,149,150,151,152,153,154,155,156,],[115,115,115,115,115,115,115,115,115,115,115,-69,-71,-70,-72,-68,-67,115,115,]),'LOCAL':([3,5,6,7,8,10,12,13,14,15,18,19,22,26,27,78,89,91,100,],[-73,-73,-4,-73,-5,-2,-73,-73,-10,-3,-44,-73,-9,36,-46,-43,-11,-45,-6,]),'SENSORS':([44,53,54,135,],[-73,71,-13,-12,]),'EFF':([145,],[159,]),'AND':([76,106,107,108,109,110,111,112,113,114,115,116,118,137,138,139,140,141,142,143,164,167,168,169,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,-37,-31,-28,-29,-30,148,-66,-65,-62,-63,-64,]),'INDENT':([33,38,43,45,50,56,65,88,103,121,170,],[44,47,51,55,66,74,79,102,123,134,172,]),'INT':([47,55,57,74,93,102,123,125,],[58,58,58,58,-19,58,58,-18,]),'FLOAT':([47,55,57,74,93,102,123,125,],[59,59,59,59,-19,59,59,-18,]),'LT':([76,106,107,108,109,110,111,112,113,114,115,116,118,137,138,139,140,141,142,143,164,167,168,169,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,-37,-31,-28,-29,-30,152,-66,-65,-62,-63,-64,]),'LEQ':([76,106,107,108,109,110,111,112,113,114,115,116,118,137,138,139,140,141,142,143,164,167,168,169,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,-37,-31,-28,-29,-30,151,-66,-65,-62,-63,-64,]),'BOOLEAN':([47,55,57,74,93,102,123,125,],[61,61,61,61,-19,61,61,-18,]),'NUMBOTS':([94,97,105,119,126,127,128,129,130,144,148,149,150,151,152,153,154,155,156,],[113,113,113,113,113,113,113,113,113,113,113,-69,-71,-70,-72,-68,-67,113,113,]),'NOT':([130,],[144,]),'ALLWRITE':([3,5,6,7,8,10,12,13,14,15,22,89,100,],[-73,-73,-4,-73,-5,-2,20,-73,-10,-3,-9,-11,-6,]),'OR':([76,106,107,108,109,110,111,112,113,114,115,116,118,137,138,139,140,141,142,143,164,167,168,169,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,-37,-31,-28,-29,-30,155,-66,-65,-62,-63,-64,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([47,55,57,74,102,123,],[57,57,57,57,57,57,]),'effblock':([145,],[158,]),'bracketexp':([94,97,105,119,126,127,128,129,130,144,148,155,156,],[106,106,106,106,106,106,106,106,106,106,106,106,106,]),'pgm':([0,],[1,]),'sdecls':([53,],[70,]),'module':([5,13,],[13,13,]),'num':([94,97,105,119,126,127,128,129,130,144,148,155,156,],[109,109,109,109,109,109,109,109,109,109,109,109,109,]),'cond':([119,130,144,148,155,156,],[131,142,157,161,162,163,]),'names':([51,],[68,]),'ardecls':([19,],[26,]),'event':([29,40,],[40,40,]),'bval':([94,97,105,119,126,127,128,129,130,144,148,155,156,],[110,110,110,110,110,110,110,110,110,110,110,110,110,]),'enumdef':([3,7,],[8,8,]),'stmts':([66,82,134,172,],[80,98,146,173,]),'locdecls':([26,],[35,]),'asgn':([66,82,134,166,172,],[83,83,83,83,83,]),'awdecls':([12,],[19,]),'numbots':([94,97,105,119,126,127,128,129,130,144,148,155,156,],[114,114,114,114,114,114,114,114,114,114,114,114,114,]),'type':([47,55,57,74,102,123,],[62,62,62,62,62,62,]),'events':([29,40,],[41,49,]),'declblock':([12,],[21,]),'defs':([3,7,],[5,15,]),'initblock':([21,],[29,]),'pid':([94,97,105,119,126,127,128,129,130,144,148,155,156,],[108,108,108,108,108,108,108,108,108,108,108,108,108,]),'stmt':([66,82,134,166,172,],[82,82,82,171,82,]),'agnt':([0,],[3,]),'varname':([62,66,82,94,97,105,119,126,127,128,129,130,134,144,148,155,156,166,172,],[77,81,81,116,116,116,116,116,116,116,116,116,81,116,116,116,116,81,81,]),'adecls':([44,],[53,]),'modules':([5,13,],[12,22,]),'empty':([3,5,7,12,13,19,21,26,44,47,53,55,57,74,102,123,],[6,14,6,18,14,27,31,37,54,64,72,64,64,64,64,64,]),'exp':([94,97,105,119,126,127,128,129,130,144,148,155,156,],[117,120,124,132,138,139,140,141,143,132,132,132,132,]),'decls':([47,55,57,74,102,123,],[63,73,75,92,122,136,]),'op':([142,],[156,]),'def':([3,7,],[7,7,]),'atomic':([66,82,134,166,172,],[84,84,84,84,84,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> pgm","S'",1,None,None,None),
  ('pgm -> agnt defs modules declblock initblock events','pgm',6,'p_pgm','sparser.py',19),
  ('agnt -> AGENT CID NL','agnt',3,'p_agnt','sparser.py',24),
  ('defs -> def defs','defs',2,'p_defs','sparser.py',29),
  ('defs -> empty','defs',1,'p_defs','sparser.py',30),
  ('def -> enumdef','def',1,'p_def','sparser.py',36),
  ('enumdef -> DEF ENUM CID COLON NL INDENT names NL DEDENT','enumdef',9,'p_enumdef','sparser.py',42),
  ('names -> names COMMA LID','names',3,'p_names','sparser.py',49),
  ('names -> LID','names',1,'p_names','sparser.py',50),
  ('modules -> module modules','modules',2,'p_modules','sparser.py',56),
  ('modules -> empty','modules',1,'p_modules','sparser.py',57),
  ('module -> MODULE CID COLON NL INDENT adecls sdecls DEDENT','module',8,'p_module','sparser.py',69),
  ('adecls -> ACTUATORS COLON NL INDENT decls DEDENT','adecls',6,'p_adecls','sparser.py',75),
  ('adecls -> empty','adecls',1,'p_adecls','sparser.py',76),
  ('sdecls -> SENSORS COLON NL INDENT decls DEDENT','sdecls',6,'p_sdecls','sparser.py',82),
  ('sdecls -> empty','sdecls',1,'p_sdecls','sparser.py',83),
  ('decls -> decl decls','decls',2,'p_decls','sparser.py',89),
  ('decls -> empty','decls',1,'p_decls','sparser.py',90),
  ('decl -> type varname ASGN exp NL','decl',5,'p_decl','sparser.py',101),
  ('decl -> type varname NL','decl',3,'p_decl','sparser.py',102),
  ('type -> INT','type',1,'p_type','sparser.py',111),
  ('type -> FLOAT','type',1,'p_type','sparser.py',112),
  ('type -> POS','type',1,'p_type','sparser.py',113),
  ('type -> BOOLEAN','type',1,'p_type','sparser.py',114),
  ('pid -> PID','pid',1,'p_pid','sparser.py',120),
  ('varname -> LID','varname',1,'p_varname','sparser.py',126),
  ('numbots -> NUMBOTS','numbots',1,'p_numbots','sparser.py',132),
  ('exp -> bracketexp','exp',1,'p_exp','sparser.py',142),
  ('exp -> exp PLUS exp','exp',3,'p_exp','sparser.py',143),
  ('exp -> exp TIMES exp','exp',3,'p_exp','sparser.py',144),
  ('exp -> exp MINUS exp','exp',3,'p_exp','sparser.py',145),
  ('exp -> exp BY exp','exp',3,'p_exp','sparser.py',146),
  ('exp -> varname','exp',1,'p_exp','sparser.py',147),
  ('exp -> num','exp',1,'p_exp','sparser.py',148),
  ('exp -> bval','exp',1,'p_exp','sparser.py',149),
  ('exp -> pid','exp',1,'p_exp','sparser.py',150),
  ('exp -> numbots','exp',1,'p_exp','sparser.py',151),
  ('bracketexp -> LPAR exp RPAR','bracketexp',3,'p_bracketexp','sparser.py',160),
  ('num -> INUM','num',1,'p_num','sparser.py',166),
  ('num -> FNUM','num',1,'p_num','sparser.py',167),
  ('bval -> TRUE','bval',1,'p_bval','sparser.py',174),
  ('bval -> FALSE','bval',1,'p_bval','sparser.py',175),
  ('declblock -> awdecls ardecls locdecls','declblock',3,'p_declblock','sparser.py',182),
  ('awdecls -> ALLWRITE COLON NL INDENT decls DEDENT','awdecls',6,'p_awdecls','sparser.py',189),
  ('awdecls -> empty','awdecls',1,'p_awdecls','sparser.py',190),
  ('ardecls -> ALLREAD COLON NL INDENT decls DEDENT','ardecls',6,'p_ardecls','sparser.py',201),
  ('ardecls -> empty','ardecls',1,'p_ardecls','sparser.py',202),
  ('locdecls -> LOCAL COLON NL INDENT decls DEDENT','locdecls',6,'p_locdecls','sparser.py',213),
  ('locdecls -> empty','locdecls',1,'p_locdecls','sparser.py',214),
  ('initblock -> INIT COLON NL INDENT stmts DEDENT','initblock',6,'p_initblock','sparser.py',222),
  ('initblock -> empty','initblock',1,'p_initblock','sparser.py',223),
  ('stmts -> stmt stmts','stmts',2,'p_stmts','sparser.py',229),
  ('stmts -> stmt','stmts',1,'p_stmts','sparser.py',230),
  ('stmt -> asgn','stmt',1,'p_stmt','sparser.py',236),
  ('stmt -> atomic','stmt',1,'p_stmt','sparser.py',237),
  ('asgn -> varname ASGN exp NL','asgn',4,'p_asgn','sparser.py',242),
  ('atomic -> ATOMIC COLON NL INDENT stmts DEDENT','atomic',6,'p_atomic','sparser.py',247),
  ('events -> event events','events',2,'p_events','sparser.py',252),
  ('events -> event','events',1,'p_events','sparser.py',253),
  ('event -> LID COLON NL INDENT PRE COLON cond NL effblock DEDENT','event',10,'p_event','sparser.py',258),
  ('effblock -> EFF COLON NL INDENT stmts DEDENT','effblock',6,'p_effblock','sparser.py',264),
  ('effblock -> EFF COLON stmt','effblock',3,'p_effblock','sparser.py',265),
  ('cond -> LPAR cond AND cond RPAR','cond',5,'p_cond','sparser.py',271),
  ('cond -> LPAR cond OR cond RPAR','cond',5,'p_cond','sparser.py',272),
  ('cond -> LPAR cond op cond RPAR','cond',5,'p_cond','sparser.py',273),
  ('cond -> LPAR NOT cond RPAR','cond',4,'p_cond','sparser.py',274),
  ('cond -> exp','cond',1,'p_cond','sparser.py',275),
  ('op -> EQ','op',1,'p_op','sparser.py',281),
  ('op -> NEQ','op',1,'p_op','sparser.py',282),
  ('op -> GEQ','op',1,'p_op','sparser.py',283),
  ('op -> LEQ','op',1,'p_op','sparser.py',284),
  ('op -> GT','op',1,'p_op','sparser.py',285),
  ('op -> LT','op',1,'p_op','sparser.py',286),
  ('empty -> <empty>','empty',0,'p_empty','sparser.py',292),
]
