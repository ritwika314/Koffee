
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A102E44D157FC277DF02B201DA87224C'
    
_lr_action_items = {'LID':([3,5,6,7,8,10,12,13,14,15,18,19,21,22,26,27,29,31,35,37,40,51,58,59,60,61,62,66,78,82,83,85,87,89,92,94,95,97,101,102,116,122,123,124,125,126,129,139,142,143,144,145,146,147,148,149,150,158,159,165,],[-71,-71,-4,-71,-5,-2,-71,-71,-10,-3,-44,-71,-71,-9,-71,-46,39,-50,-42,-48,39,67,-20,-21,-22,-23,76,76,-43,76,-53,98,-11,-45,76,-49,76,-6,-47,76,76,76,76,76,76,76,-54,76,76,-67,-69,-68,-70,-66,-65,76,76,-57,76,76,]),'DEDENT':([44,47,53,54,55,57,63,64,70,72,73,74,75,80,82,83,84,90,91,96,99,118,119,121,129,130,131,141,152,164,166,167,],[-71,-71,-71,-13,-71,-71,78,-17,87,-15,89,-71,-16,94,-52,-53,97,101,-19,-51,-71,130,-71,-18,-54,-12,141,-14,158,-59,167,-58,]),'CID':([2,11,16,],[4,17,23,]),'ALLREAD':([3,5,6,7,8,10,12,13,14,15,18,19,22,78,87,97,],[-71,-71,-4,-71,-5,-2,-71,-71,-10,-3,-44,25,-9,-43,-11,-6,]),'RPAR':([76,103,104,105,106,107,108,109,110,111,112,113,115,120,128,132,133,134,135,136,138,151,154,155,156,157,160,161,162,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,132,-64,-37,-31,-28,-29,-30,132,157,160,161,162,-63,-60,-61,-62,]),'TRUE':([92,95,102,116,122,123,124,125,126,139,142,143,144,145,146,147,148,149,150,],[108,108,108,108,108,108,108,108,108,108,108,-67,-69,-68,-70,-66,-65,108,108,]),'MINUS':([76,103,104,105,106,107,108,109,110,111,112,113,114,115,117,120,128,132,133,134,135,136,138,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,125,-38,125,125,125,-37,125,125,125,125,125,]),'DEF':([3,7,8,10,97,],[9,9,-5,-2,-6,]),'NEQ':([76,103,104,105,106,107,108,109,110,111,112,113,115,132,133,134,135,136,137,138,157,160,161,162,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,-37,-31,-28,-29,-30,147,-64,-63,-60,-61,-62,]),'PRE':([79,],[93,]),'GEQ':([76,103,104,105,106,107,108,109,110,111,112,113,115,132,133,134,135,136,137,138,157,160,161,162,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,-37,-31,-28,-29,-30,143,-64,-63,-60,-61,-62,]),'NL':([4,24,28,32,34,42,46,48,67,68,69,76,77,88,98,103,104,105,106,107,108,109,110,111,112,113,114,115,117,127,128,132,133,134,135,136,157,159,160,161,162,],[10,33,38,43,45,50,56,65,-8,84,86,-25,91,100,-7,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,121,-38,129,140,-64,-37,-31,-28,-29,-30,-63,163,-60,-61,-62,]),'EQ':([76,103,104,105,106,107,108,109,110,111,112,113,115,132,133,134,135,136,137,138,157,160,161,162,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,-37,-31,-28,-29,-30,148,-64,-63,-60,-61,-62,]),'PID':([92,95,102,116,122,123,124,125,126,139,142,143,144,145,146,147,148,149,150,],[109,109,109,109,109,109,109,109,109,109,109,-67,-69,-68,-70,-66,-65,109,109,]),'POS':([47,55,57,74,91,99,119,121,],[60,60,60,60,-19,60,60,-18,]),'AGENT':([0,],[2,]),'ASGN':([76,77,81,],[-25,92,95,]),'INIT':([3,5,6,7,8,10,12,13,14,15,18,19,21,22,26,27,35,37,78,87,89,97,101,],[-71,-71,-4,-71,-5,-2,-71,-71,-10,-3,-44,-71,30,-9,-71,-46,-42,-48,-43,-11,-45,-6,-47,]),'FNUM':([92,95,102,116,122,123,124,125,126,139,142,143,144,145,146,147,148,149,150,],[104,104,104,104,104,104,104,104,104,104,104,-67,-69,-68,-70,-66,-65,104,104,]),'COLON':([17,20,23,25,30,36,39,52,71,93,153,],[24,28,32,34,42,46,48,69,88,116,159,]),'COMMA':([67,68,98,],[-8,85,-7,]),'BY':([76,103,104,105,106,107,108,109,110,111,112,113,114,115,117,120,128,132,133,134,135,136,138,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,122,-38,122,122,122,-37,122,122,122,122,122,]),'LPAR':([92,95,102,116,122,123,124,125,126,139,142,143,144,145,146,147,148,149,150,],[102,102,102,126,102,102,102,102,126,126,126,-67,-69,-68,-70,-66,-65,126,126,]),'$end':([1,40,41,49,158,],[0,-56,-1,-55,-57,]),'PLUS':([76,103,104,105,106,107,108,109,110,111,112,113,114,115,117,120,128,132,133,134,135,136,138,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,123,-38,123,123,123,-37,123,123,123,123,123,]),'GT':([76,103,104,105,106,107,108,109,110,111,112,113,115,132,133,134,135,136,137,138,157,160,161,162,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,-37,-31,-28,-29,-30,144,-64,-63,-60,-61,-62,]),'ACTUATORS':([44,],[52,]),'ENUM':([9,],[16,]),'MODULE':([3,5,6,7,8,10,13,15,87,97,],[-71,11,-4,-71,-5,-2,11,-3,-11,-6,]),'TIMES':([76,103,104,105,106,107,108,109,110,111,112,113,114,115,117,120,128,132,133,134,135,136,138,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,124,-38,124,124,124,-37,124,124,124,124,124,]),'INUM':([92,95,102,116,122,123,124,125,126,139,142,143,144,145,146,147,148,149,150,],[115,115,115,115,115,115,115,115,115,115,115,-67,-69,-68,-70,-66,-65,115,115,]),'FALSE':([92,95,102,116,122,123,124,125,126,139,142,143,144,145,146,147,148,149,150,],[112,112,112,112,112,112,112,112,112,112,112,-67,-69,-68,-70,-66,-65,112,112,]),'LOCAL':([3,5,6,7,8,10,12,13,14,15,18,19,22,26,27,78,87,89,97,],[-71,-71,-4,-71,-5,-2,-71,-71,-10,-3,-44,-71,-9,36,-46,-43,-11,-45,-6,]),'SENSORS':([44,53,54,130,],[-71,71,-13,-12,]),'EFF':([140,],[153,]),'AND':([76,103,104,105,106,107,108,109,110,111,112,113,115,132,133,134,135,136,137,138,157,160,161,162,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,-37,-31,-28,-29,-30,142,-64,-63,-60,-61,-62,]),'INDENT':([33,38,43,45,50,56,65,86,100,163,],[44,47,51,55,66,74,79,99,119,165,]),'INT':([47,55,57,74,91,99,119,121,],[58,58,58,58,-19,58,58,-18,]),'FLOAT':([47,55,57,74,91,99,119,121,],[59,59,59,59,-19,59,59,-18,]),'LT':([76,103,104,105,106,107,108,109,110,111,112,113,115,132,133,134,135,136,137,138,157,160,161,162,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,-37,-31,-28,-29,-30,146,-64,-63,-60,-61,-62,]),'LEQ':([76,103,104,105,106,107,108,109,110,111,112,113,115,132,133,134,135,136,137,138,157,160,161,162,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,-37,-31,-28,-29,-30,145,-64,-63,-60,-61,-62,]),'BOOLEAN':([47,55,57,74,91,99,119,121,],[61,61,61,61,-19,61,61,-18,]),'NUMBOTS':([92,95,102,116,122,123,124,125,126,139,142,143,144,145,146,147,148,149,150,],[110,110,110,110,110,110,110,110,110,110,110,-67,-69,-68,-70,-66,-65,110,110,]),'NOT':([126,],[139,]),'ALLWRITE':([3,5,6,7,8,10,12,13,14,15,22,87,97,],[-71,-71,-4,-71,-5,-2,20,-71,-10,-3,-9,-11,-6,]),'OR':([76,103,104,105,106,107,108,109,110,111,112,113,115,132,133,134,135,136,137,138,157,160,161,162,],[-25,-27,-39,-35,-33,-34,-40,-24,-26,-36,-41,-32,-38,-37,-31,-28,-29,-30,149,-64,-63,-60,-61,-62,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([47,55,57,74,99,119,],[57,57,57,57,57,57,]),'effblock':([140,],[152,]),'bracketexp':([92,95,102,116,122,123,124,125,126,139,142,149,150,],[103,103,103,103,103,103,103,103,103,103,103,103,103,]),'pgm':([0,],[1,]),'sdecls':([53,],[70,]),'module':([5,13,],[13,13,]),'num':([92,95,102,116,122,123,124,125,126,139,142,149,150,],[106,106,106,106,106,106,106,106,106,106,106,106,106,]),'cond':([116,126,139,142,149,150,],[127,137,151,154,155,156,]),'names':([51,],[68,]),'ardecls':([19,],[26,]),'event':([29,40,],[40,40,]),'bval':([92,95,102,116,122,123,124,125,126,139,142,149,150,],[107,107,107,107,107,107,107,107,107,107,107,107,107,]),'enumdef':([3,7,],[8,8,]),'stmts':([66,82,165,],[80,96,166,]),'locdecls':([26,],[35,]),'asgn':([66,82,159,165,],[83,83,83,83,]),'awdecls':([12,],[19,]),'numbots':([92,95,102,116,122,123,124,125,126,139,142,149,150,],[111,111,111,111,111,111,111,111,111,111,111,111,111,]),'type':([47,55,57,74,99,119,],[62,62,62,62,62,62,]),'events':([29,40,],[41,49,]),'declblock':([12,],[21,]),'defs':([3,7,],[5,15,]),'initblock':([21,],[29,]),'pid':([92,95,102,116,122,123,124,125,126,139,142,149,150,],[105,105,105,105,105,105,105,105,105,105,105,105,105,]),'stmt':([66,82,159,165,],[82,82,164,82,]),'agnt':([0,],[3,]),'varname':([62,66,82,92,95,102,116,122,123,124,125,126,139,142,149,150,159,165,],[77,81,81,113,113,113,113,113,113,113,113,113,113,113,113,113,81,81,]),'adecls':([44,],[53,]),'modules':([5,13,],[12,22,]),'empty':([3,5,7,12,13,19,21,26,44,47,53,55,57,74,99,119,],[6,14,6,18,14,27,31,37,54,64,72,64,64,64,64,64,]),'exp':([92,95,102,116,122,123,124,125,126,139,142,149,150,],[114,117,120,128,133,134,135,136,138,128,128,128,128,]),'decls':([47,55,57,74,99,119,],[63,73,75,90,118,131,]),'def':([3,7,],[7,7,]),'op':([137,],[150,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> pgm","S'",1,None,None,None),
  ('pgm -> agnt defs modules declblock initblock events','pgm',6,'p_pgm','sparser.py',19),
  ('agnt -> AGENT CID NL','agnt',3,'p_agnt','sparser.py',24),
  ('defs -> def defs','defs',2,'p_defs','sparser.py',29),
  ('defs -> empty','defs',1,'p_defs','sparser.py',30),
  ('def -> enumdef','def',1,'p_def','sparser.py',36),
  ('enumdef -> DEF ENUM CID COLON NL INDENT names NL DEDENT','enumdef',9,'p_enumdef','sparser.py',42),
  ('names -> names COMMA LID','names',3,'p_names','sparser.py',49),
  ('names -> LID','names',1,'p_names','sparser.py',50),
  ('modules -> module modules','modules',2,'p_modules','sparser.py',56),
  ('modules -> empty','modules',1,'p_modules','sparser.py',57),
  ('module -> MODULE CID COLON NL INDENT adecls sdecls DEDENT','module',8,'p_module','sparser.py',69),
  ('adecls -> ACTUATORS COLON NL INDENT decls DEDENT','adecls',6,'p_adecls','sparser.py',75),
  ('adecls -> empty','adecls',1,'p_adecls','sparser.py',76),
  ('sdecls -> SENSORS COLON NL INDENT decls DEDENT','sdecls',6,'p_sdecls','sparser.py',82),
  ('sdecls -> empty','sdecls',1,'p_sdecls','sparser.py',83),
  ('decls -> decl decls','decls',2,'p_decls','sparser.py',89),
  ('decls -> empty','decls',1,'p_decls','sparser.py',90),
  ('decl -> type varname ASGN exp NL','decl',5,'p_decl','sparser.py',101),
  ('decl -> type varname NL','decl',3,'p_decl','sparser.py',102),
  ('type -> INT','type',1,'p_type','sparser.py',111),
  ('type -> FLOAT','type',1,'p_type','sparser.py',112),
  ('type -> POS','type',1,'p_type','sparser.py',113),
  ('type -> BOOLEAN','type',1,'p_type','sparser.py',114),
  ('pid -> PID','pid',1,'p_pid','sparser.py',120),
  ('varname -> LID','varname',1,'p_varname','sparser.py',126),
  ('numbots -> NUMBOTS','numbots',1,'p_numbots','sparser.py',132),
  ('exp -> bracketexp','exp',1,'p_exp','sparser.py',138),
  ('exp -> exp PLUS exp','exp',3,'p_exp','sparser.py',139),
  ('exp -> exp TIMES exp','exp',3,'p_exp','sparser.py',140),
  ('exp -> exp MINUS exp','exp',3,'p_exp','sparser.py',141),
  ('exp -> exp BY exp','exp',3,'p_exp','sparser.py',142),
  ('exp -> varname','exp',1,'p_exp','sparser.py',143),
  ('exp -> num','exp',1,'p_exp','sparser.py',144),
  ('exp -> bval','exp',1,'p_exp','sparser.py',145),
  ('exp -> pid','exp',1,'p_exp','sparser.py',146),
  ('exp -> numbots','exp',1,'p_exp','sparser.py',147),
  ('bracketexp -> LPAR exp RPAR','bracketexp',3,'p_bracketexp','sparser.py',156),
  ('num -> INUM','num',1,'p_num','sparser.py',162),
  ('num -> FNUM','num',1,'p_num','sparser.py',163),
  ('bval -> TRUE','bval',1,'p_bval','sparser.py',170),
  ('bval -> FALSE','bval',1,'p_bval','sparser.py',171),
  ('declblock -> awdecls ardecls locdecls','declblock',3,'p_declblock','sparser.py',178),
  ('awdecls -> ALLWRITE COLON NL INDENT decls DEDENT','awdecls',6,'p_awdecls','sparser.py',185),
  ('awdecls -> empty','awdecls',1,'p_awdecls','sparser.py',186),
  ('ardecls -> ALLREAD COLON NL INDENT decls DEDENT','ardecls',6,'p_ardecls','sparser.py',198),
  ('ardecls -> empty','ardecls',1,'p_ardecls','sparser.py',199),
  ('locdecls -> LOCAL COLON NL INDENT decls DEDENT','locdecls',6,'p_locdecls','sparser.py',211),
  ('locdecls -> empty','locdecls',1,'p_locdecls','sparser.py',212),
  ('initblock -> INIT COLON NL INDENT stmts DEDENT','initblock',6,'p_initblock','sparser.py',221),
  ('initblock -> empty','initblock',1,'p_initblock','sparser.py',222),
  ('stmts -> stmt stmts','stmts',2,'p_stmts','sparser.py',229),
  ('stmts -> stmt','stmts',1,'p_stmts','sparser.py',230),
  ('stmt -> asgn','stmt',1,'p_stmt','sparser.py',237),
  ('asgn -> varname ASGN exp NL','asgn',4,'p_asgn','sparser.py',243),
  ('events -> event events','events',2,'p_events','sparser.py',249),
  ('events -> event','events',1,'p_events','sparser.py',250),
  ('event -> LID COLON NL INDENT PRE COLON cond NL effblock DEDENT','event',10,'p_event','sparser.py',255),
  ('effblock -> EFF COLON NL INDENT stmts DEDENT','effblock',6,'p_effblock','sparser.py',261),
  ('effblock -> EFF COLON stmt','effblock',3,'p_effblock','sparser.py',262),
  ('cond -> LPAR cond AND cond RPAR','cond',5,'p_cond','sparser.py',268),
  ('cond -> LPAR cond OR cond RPAR','cond',5,'p_cond','sparser.py',269),
  ('cond -> LPAR cond op cond RPAR','cond',5,'p_cond','sparser.py',270),
  ('cond -> LPAR NOT cond RPAR','cond',4,'p_cond','sparser.py',271),
  ('cond -> exp','cond',1,'p_cond','sparser.py',272),
  ('op -> EQ','op',1,'p_op','sparser.py',278),
  ('op -> NEQ','op',1,'p_op','sparser.py',279),
  ('op -> GEQ','op',1,'p_op','sparser.py',280),
  ('op -> LEQ','op',1,'p_op','sparser.py',281),
  ('op -> GT','op',1,'p_op','sparser.py',282),
  ('op -> LT','op',1,'p_op','sparser.py',283),
  ('empty -> <empty>','empty',0,'p_empty','sparser.py',289),
]
